// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Navigator /> should render Navigator Correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <nav
        className="navbar navbar-toggleable-md navbar-expand-md navbar-light bg-faded"
    >
        <button
            className="navbar-toggler navbar-toggler-right"
            type="button"
        >
            <span
                className="navbar-toggler-icon"
            />
        </button>
    </nav>
</div>,
  "nodes": Array [
    <div>
      <nav
            className="navbar navbar-toggleable-md navbar-expand-md navbar-light bg-faded"
      >
            <button
                  className="navbar-toggler navbar-toggler-right"
                  type="button"
            >
                  <span
                        className="navbar-toggler-icon"
                  />
            </button>
      </nav>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Navigator
        items={
                Array [
                        Object {
                          "link": "/mall",
                          "name": "Malls",
                        },
                        Object {
                          "link": "/flagship",
                          "name": "Flagship Stores",
                        },
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "items": Array [
            Object {
              "link": "/mall",
              "name": "Malls",
            },
            Object {
              "link": "/flagship",
              "name": "Flagship Stores",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <nav
                    className="navbar navbar-toggleable-md navbar-expand-md navbar-light bg-faded"
          >
                    <button
                              className="navbar-toggler navbar-toggler-right"
                              type="button"
                    >
                              <span
                                        className="navbar-toggler-icon"
                              />
                    </button>
          </nav>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <nav
                    className="navbar navbar-toggleable-md navbar-expand-md navbar-light bg-faded"
          >
                    <button
                              className="navbar-toggler navbar-toggler-right"
                              type="button"
                    >
                              <span
                                        className="navbar-toggler-icon"
                              />
                    </button>
          </nav>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Navigator
    items={
        Array [
            Object {
              "link": "/mall",
              "name": "Malls",
            },
            Object {
              "link": "/flagship",
              "name": "Flagship Stores",
            },
          ]
    }
/>,
}
`;
